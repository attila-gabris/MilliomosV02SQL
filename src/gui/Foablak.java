/*
* A Foablak osztály felel a megjelenítésért és a program vezérléséért is. 
 */
package gui;

import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import model.DBModel;
import model.Kerdes;

public class Foablak extends javax.swing.JFrame {

    private List<Kerdes> kerdesek; //Ebbe a listába kerülnek a kérdés objektumok.
    private List<String> nyeremenyek; //Ebbe a listába kerülnek a nyeremények, nem változik.
    private Kerdes aktKerdes; //Az aktuális kérdés objektumra mutató referencia változó.
    private int szamlalo = 14; //A játékban hátralévő kérdések.
    private int kerdesIndex = 0; //A kérdés listában az aktuális kérdés mutatója.
    private DefaultListCellRenderer renderer; //A nyereményeket megjelenítő JList formázásához szükséges renderer.
    private JLabel label = new JLabel(); //A JOptionPane feliratok formázásához szükséges objektum.
    private DBModel model; //DAO modell objektum
    private boolean init; //A nyitóképernyő és a játék közötti váltás

    public Foablak() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Legyen Ön is milliomos! v0.2");
        label.setFont(new Font("Tahoma", Font.BOLD, 12)); //A JOptionPane feliratok formázása

        String db_URL = "jdbc:mysql://localhost:3306/milliomos"; //Az adatbázis kapcsolathoz szükséges paraméterek
        String user = "root";
        String pass = "1234";
        try {
            Connection conn = DriverManager.getConnection(db_URL, user, pass);
            model = new DBModel(conn); //model objektum létrehozása
            kerdesek = model.getAllKerdes(); //a model metódusa lekérdezi az adatbázisból a kérdéseket, és hozzáadja a listához
            Collections.shuffle(kerdesek); //a listát véletlenszerű sorrendbe rendezi
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage(), 
                    "Adatbázis hiba", JOptionPane.ERROR_MESSAGE);
            System.exit(-1);
        }

        /*
            * A nyereményeket String-ként hozzáadja a nyeremenyek listához, majd azt megjeleníti
            * egy JList-ben. A JList tartalmát a renderer jobbra rendezi. 
         */
        nyeremenyek = new ArrayList<>();
        nyeremenyek.addAll(Arrays.asList("40 000 000", "20 000 000", "10 000 000", "5 000 000", "3 000 000",
                "1 500 000", "800 000", "500 000", "300 000", "200 000", "100 000", "50 000", "25 000", "10 000", "5 000"));
        lstNyeremeny.setListData(nyeremenyek.toArray());
        renderer = (DefaultListCellRenderer) lstNyeremeny.getCellRenderer();
        renderer.setHorizontalAlignment(JLabel.RIGHT);

        init(); // A játék az init metódus hívásával indul.

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnValasz0 = new javax.swing.JButton();
        btnValasz1 = new javax.swing.JButton();
        btnValasz2 = new javax.swing.JButton();
        btnValasz3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstNyeremeny = new javax.swing.JList();
        lbKerdes = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        miKilepes = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        miAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        btnValasz0.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnValasz0.setText("jButton1");
        btnValasz0.setFocusable(false);
        btnValasz0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValasz0ActionPerformed(evt);
            }
        });

        btnValasz1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnValasz1.setText("jButton2");
        btnValasz1.setFocusable(false);
        btnValasz1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValasz1ActionPerformed(evt);
            }
        });

        btnValasz2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnValasz2.setText("jButton3");
        btnValasz2.setFocusable(false);
        btnValasz2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValasz2ActionPerformed(evt);
            }
        });

        btnValasz3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnValasz3.setText("jButton4");
        btnValasz3.setFocusable(false);
        btnValasz3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValasz3ActionPerformed(evt);
            }
        });

        lstNyeremeny.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        lstNyeremeny.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstNyeremeny.setAutoscrolls(false);
        jScrollPane1.setViewportView(lstNyeremeny);

        lbKerdes.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbKerdes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbKerdes.setText("jLabel1");
        lbKerdes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/mil.jpg"))); // NOI18N

        jMenu1.setText("Fájl");

        miKilepes.setText("Kilépés");
        miKilepes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miKilepesActionPerformed(evt);
            }
        });
        jMenu1.add(miKilepes);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Súgó");

        miAbout.setText("Névjegy");
        miAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAboutActionPerformed(evt);
            }
        });
        jMenu3.add(miAbout);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnValasz0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnValasz2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnValasz3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnValasz1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 727, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbKerdes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 906, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(14, 14, 14)
                .addComponent(lbKerdes, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnValasz0, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(btnValasz1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnValasz2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnValasz3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnValasz0, btnValasz1, btnValasz2, btnValasz3});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    * A válasz gombok játék közben az ertekeles metódust hívják.
    * A nyitóképernyőn a gombok az init metódus által megjelenített lehetőségek szerint működnek. 
     */
    private void btnValasz0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValasz0ActionPerformed
        if (init) {
            ujKerdes(); //A nyitóképernyőn játék az ujKerdes metódus hívásával indul.
        } else {
            ertekeles(0);
        }
        init = false;
    }//GEN-LAST:event_btnValasz0ActionPerformed

    private void btnValasz1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValasz1ActionPerformed
        if (init) {
            KerdesSzerkeszto ksz = new KerdesSzerkeszto(this, true, kerdesek, model); //Kérdésszerkesztő dialógus létrehozása
            ksz.setVisible(true); //A kérdésszerkesztő ablak indítása
            Collections.shuffle(kerdesek); //A kérdésszerkesztő ablak bezárása után a kérdéseket újra véletlenszerű sorrendbe állítja.
        } else {
            ertekeles(1);
        }
    }//GEN-LAST:event_btnValasz1ActionPerformed

    private void btnValasz2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValasz2ActionPerformed
        if (init) {
            nevjegy(); //Megjeleníti a program névjegyét. 
        } else {
            ertekeles(2);
        }
    }//GEN-LAST:event_btnValasz2ActionPerformed

    private void btnValasz3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValasz3ActionPerformed
        if (init) {
            exit(); //Kilépés a programból az exit metódus hívásával.
        } else {
            ertekeles(3);
        }
    }//GEN-LAST:event_btnValasz3ActionPerformed

    private void miKilepesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miKilepesActionPerformed
        exit(); //Kilépés a programból az exit metódus hívásával.
    }//GEN-LAST:event_miKilepesActionPerformed

    private void miAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAboutActionPerformed
        nevjegy(); //Megjeleníti a program névjegyét. 
    }//GEN-LAST:event_miAboutActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        exit(); //Kilépés a programból az exit metódus hívásával.
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Foablak().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnValasz0;
    private javax.swing.JButton btnValasz1;
    private javax.swing.JButton btnValasz2;
    private javax.swing.JButton btnValasz3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbKerdes;
    private javax.swing.JList lstNyeremeny;
    private javax.swing.JMenuItem miAbout;
    private javax.swing.JMenuItem miKilepes;
    // End of variables declaration//GEN-END:variables

    /*
    * A játék kezdetén lehetőség van játék indítására, a kérdésszerkesztő használatára,
    * a névjegy megjelenítésére vagy kilépésre.
     */
    public void init() {
        lbKerdes.setText("Kérem válasszon az alábbi lehetőségek közül:");
        btnValasz0.setText("Új játék indítása");
        btnValasz1.setText("Kérdésszerkesző használata");
        btnValasz2.setText("A program névjegye");
        btnValasz3.setText("Kilépés");
        init = true;
    }

    /*
    * A metódus megjeleníti az aktuális kérdést és megjelöli a hozzá tartozó nyereményt. 
     */
    public void ujKerdes() {
        //init = false;
        aktKerdes = kerdesek.get(kerdesIndex);
        lbKerdes.setText(aktKerdes.getKerdes());
        btnValasz0.setText("A: " + aktKerdes.getValasz0());
        btnValasz1.setText("B: " + aktKerdes.getValasz1());
        btnValasz2.setText("C: " + aktKerdes.getValasz2());
        btnValasz3.setText("D: " + aktKerdes.getValasz3());
        lstNyeremeny.setSelectedIndex(szamlalo);
    }

    /*
    * A metódus ellenőrzi a válasz helyességét és a játék 
    * állását, megjelníti a megfelelő párbeszédpaneleket, és a kiválasztott lehetőségnek
    * megfelelően új kérdést jelenít meg, új játékot indít, vagy kilép.
     */
    public void ertekeles(int valasz) {
        aktKerdes = kerdesek.get(kerdesIndex);
        int helyes = aktKerdes.getHelyesValasz();
        String helyesBetu = ""; // A JOptionPane-ben megjelenítendő helyes válasz betűjele
        switch (helyes) {
            case 0:
                helyesBetu = "A";
                break;
            case 1:
                helyesBetu = "B";
                break;
            case 2:
                helyesBetu = "C";
                break;
            case 3:
                helyesBetu = "D";
                break;
            default:
                helyesBetu = "";
        }

        if (valasz == helyes) { //Helyes válasz esetén,
            if (szamlalo == 0) { //ha ez az utolsó kérdés
                label.setText("Gratulálok, Ön megnyerte a főnyereményt!");
                JOptionPane.showMessageDialog(rootPane, label,
                        "Ön milliomos lett", JOptionPane.PLAIN_MESSAGE);
                ujJatek();
            } else if (szamlalo <= 10) { //ha túllépte a 100000 Ft-ot

                label.setText("Továbbmegy, vagy elviszi az eddigi nyereményt?");
                String[] optionsTovabbMegall = {"Továbbmegyek", "Megállok"};
                int tovabb = JOptionPane.showOptionDialog(rootPane, label, "Kérdés", JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE, null, optionsTovabbMegall, null);

                if (tovabb == JOptionPane.NO_OPTION) { // ha megáll, és elviszi az eddigi nyereményt
                    String nyeremeny = nyeremenyek.get(szamlalo);
                    label.setText("Gratulálok, Ön nyert " + nyeremeny + " Ft-ot!");
                    JOptionPane.showMessageDialog(rootPane, label, "Nyeremény", JOptionPane.INFORMATION_MESSAGE);
                    ujJatek();
                } else { // ha továbbmegy, új kérdés megjelenítése
                    szamlalo--;
                    kerdesIndex++;
                    ujKerdes();
                }

            } else { //ha még nem érte el a 100000 Ft-ot
                szamlalo--;
                kerdesIndex++;
                ujKerdes();
            }

        } else { //Helytelen válasz esetén
            label.setText("Sajnos nem jól választott! A helyes válasz: " + helyesBetu);
            JOptionPane.showMessageDialog(rootPane, label, "Hibás válasz!", JOptionPane.WARNING_MESSAGE);
            if (szamlalo <= 10) { //100000 Ft felett garantált nyeremény
                String garNyeremeny = "";
                if (szamlalo >= 6) {
                    garNyeremeny = "100 000";
                } else if (szamlalo <= 5) {
                    garNyeremeny = "1 500 000";
                }
                label.setText("Gratulálok, Ön nyert " + garNyeremeny + " Ft-ot!");
                JOptionPane.showMessageDialog(rootPane, label,
                        "Garantált nyeremény", JOptionPane.INFORMATION_MESSAGE);
            }
            ujJatek();

        }
    }

    public void ujJatek() { //Kérdés, szeretne újra játszani
        label.setText("Szeretne újra játszani?");
        String[] optionsIgenNem = {"Igen", "Nem"};
        int ujra = JOptionPane.showOptionDialog(rootPane, label, "Kérdés", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, optionsIgenNem, null);

        if (ujra == JOptionPane.YES_OPTION) { //ha igen, visszaállítja a számlálókat
            szamlalo = 14;
            kerdesIndex = 0;
            Collections.shuffle(kerdesek); //véletlenszerű sorrendbe rendezi a kérdéseket
            init(); //megjeleníti a kezdőképernyőt
        } else {
            System.exit(0); //kilép a programból
        }
    }

    public void nevjegy() {
        label.setText("<html>Legyen Ön is milliomos v0.2 (MySQL változat)<br>Készítette: Gábris Attila<br>email: attila.gabris@gmail.com<br>"
                + "A szoftver ingyenesen letölthető, használható és terjeszthető<br>"
                + "Kép licence: https://commons.wikimedia.org/wiki/File:Milonario_El_Salvador.jpg</html>");
        JOptionPane.showMessageDialog(rootPane, label,
                "Névjegy", JOptionPane.PLAIN_MESSAGE);
    }

    public void exit() { //Az adatbázis kapcsolat lezárása.
        try {
            model.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage(), 
                    "Adatbázis hiba", JOptionPane.ERROR_MESSAGE);
            System.exit(-1);
        }
        System.exit(0);
    }
}
